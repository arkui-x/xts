/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, TestType, Size } from '@ohos/hypium';
import { i18n } from '@kit.LocalizationKit';

export default function AppPreferredLanguageTest() {
  describe('AppPreferredLanguageTest', () => {
    // Defines a test suite. Two parameters are supported: test suite name and test suite function.
    beforeAll(() => {
      // Presets an action, which is performed only once before all test cases of the test suite start.
      // This API supports only one parameter: preset action function.
    })
    beforeEach(() => {
      // Presets an action, which is performed before each unit test case starts.
      // The number of execution times is the same as the number of test cases defined by **it**.
      // This API supports only one parameter: preset action function.
    })
    afterEach(() => {
      // Presets a clear action, which is performed after each unit test case ends.
      // The number of execution times is the same as the number of test cases defined by **it**.
      // This API supports only one parameter: clear action function.
    })
    afterAll(() => {
      // Presets a clear action, which is performed after all test cases of the test suite end.
      // This API supports only one parameter: clear action function.
    })

    /**
     * @tc.number   : SUB_GLOBAL_I18N_AppPreferredLanguage_0100
     * @tc.name     : testSetAppPreferredLanguageTest0001
     * @tc.desc     : setAppPreferredLanguage - Set App Preferred Language
     * @tc.size     : MEDIUM
     * @tc.type     : Function
     * @tc.level    : Level 0
     */
    it('testSetAppPreferredLanguageTest0001', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL0, () => {
      try {
        i18n.System.setAppPreferredLanguage('zh'); // 设置应用偏好语言
      } catch (e) {
        console.log('testSetAppPreferredLanguageTest0001 code&message:' + e.code + e.message);
        expect(e.code).assertNull();
      }
    });

    /**
     * @tc.number   : SUB_GLOBAL_I18N_AppPreferredLanguage_0200
     * @tc.name     : testSetAppPreferredLanguageTest0002
     * @tc.desc     : setAppPreferredLanguage - Set App Preferred Language to invalid language
     * @tc.size     : MEDIUM
     * @tc.type     : Function
     * @tc.level    : Level 3
     */
    it('testSetAppPreferredLanguageTest0002', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL3, () => {
      try {
        i18n.System.setAppPreferredLanguage('1'); // 设置应用偏好语言
        expect().assertFail('Expected exception not thrown: setAppPreferredLanguage should throw for invalid language tag "1"');
      } catch (e) {
        console.log('testSetAppPreferredLanguageTest0002 code&message:' + e.code + e.message);
        expect(e.code == 890001).assertTrue();
      }
    });

    /**
     * @tc.number   : SUB_GLOBAL_I18N_AppPreferredLanguage_0300
     * @tc.name     : testSetAppPreferredLanguageTest0003
     * @tc.desc     : setAppPreferredLanguage - Set App Preferred Language to zh-CN
     * @tc.size     : MEDIUM
     * @tc.type     : Function
     * @tc.level    : Level 2
     */
    it('testSetAppPreferredLanguageTest0003', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, () => {
      i18n.System.setAppPreferredLanguage('zh-CN'); // 设置应用偏好语言'zh-CN'
      let appPreferredLanguage: string = i18n.System.getAppPreferredLanguage();
      console.log('testSetAppPreferredLanguageTest0003:' + appPreferredLanguage);
      expect(appPreferredLanguage == 'zh-CN').assertTrue();
    });
  })
}
