/*
 * Copyright (C) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect } from "@ohos/hypium";
import cert from '@ohos.security.cert';
import { BusinessError } from '@ohos.base';
import { sleep } from './utils/common/commonFunction';

export default function certFrameworkCreateTrustAnchorJsAPIFunctionTestUnit() {
  describe("certFrameworkCreateTrustAnchorJsAPIFunctionTestUnit", () => {
    afterEach(async () => {
      await sleep(1000)
    });

    /**
     * @tc.number SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0100
     * @tc.name check createTrustAnchorsWithKeyStore with all correct param
     * @tc.desc Use Promise Type
     * @tc.size SmallTest
     * @tc.level Level1
     * @tc.type Function
     */
    it("SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0100", 0, async (done: Function) => {
      let caseName = "SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0100";
      try {
        cert.createTrustAnchorsWithKeyStore(pubKeyData, '123456').then((data) => {
          expect(data.length == 1).assertTrue();
          expect(data[0].CACert?.getNotBeforeTime() == '240415073310Z').assertTrue();
          done();
        }).catch((err: BusinessError) => {
          console.error(`${caseName} failed, err: ${JSON.stringify(err)}`);
          expect(null).assertFail();
          done();
        });
      } catch (error) {
        console.error(`${caseName} catch error: ${JSON.stringify(error)}`);
        expect(null).assertFail();
        done();
      }
    });

    /**
     * @tc.number SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0200
     * @tc.name check createTrustAnchorsWithKeyStore with keystore incorrect
     * @tc.desc Use Promise Type
     * @tc.size SmallTest
     * @tc.level Level1
     * @tc.type Function
     */
    it("SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0200", 0, async (done: Function) => {
      let caseName = "SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0200";
      let keystore = new Uint8Array([0x30, 0x82, 0x01]);
      try {
        cert.createTrustAnchorsWithKeyStore(keystore, '123456')
          .then((data) => {
            console.log(`${caseName} success, data: ${JSON.stringify(data.length)}`);
            expect(null).assertFail();
            done();
          })
          .catch((err: BusinessError) => {
            console.error(`${caseName} failed, err: ${JSON.stringify(err)}`);
            expect(err.code == 19030001).assertTrue();
            done();
          });
      } catch (error) {
        console.error(`${caseName} catch error: ${JSON.stringify(error)}`);
        expect(null).assertFail();
        done();
      }
    });

    /**
     * @tc.number SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0300
     * @tc.name check createTrustAnchorsWithKeyStore with keystore empty
     * @tc.desc Use Promise Type
     * @tc.size SmallTest
     * @tc.level Level1
     * @tc.type Function
     */
    it("SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0300", 0, async (done: Function) => {
      let caseName = "SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0300";
      let keystore = new Uint8Array();
      try {
        cert.createTrustAnchorsWithKeyStore(keystore, '123456')
          .then((data) => {
            expect(null).assertFail();
            done();
          })
          .catch((err: BusinessError) => {
            console.error(`${caseName} failed, err: ${JSON.stringify(err)}`);
            expect(null).assertFail();
            done();
          });
      } catch (error) {
        console.error(`${caseName} catch error: ${JSON.stringify(error)}`);
        expect(error.code == 401).assertTrue();
        done();
      }
    });

    /**
     * @tc.number SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0400
     * @tc.name check createTrustAnchorsWithKeyStore with pwd incorrect
     * @tc.desc Use Promise Type
     * @tc.size SmallTest
     * @tc.level Level1
     * @tc.type Function
     */
    it("SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0400", 0, async (done: Function) => {
      let caseName = "SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0400";
      let pwd = '8888';
      try {
        cert.createTrustAnchorsWithKeyStore(pubKeyData, pwd)
          .then((data) => {
            console.log(`${caseName} success, data: ${JSON.stringify(data.length)}`);
            expect(null).assertFail();
            done();
          })
          .catch((err: BusinessError) => {
            console.error(`${caseName} failed, err: ${JSON.stringify(err)}`);
            expect(err.code == 19030001).assertTrue();
            done();
          });
      } catch (error) {
        console.error(`${caseName} catch error: ${JSON.stringify(error)}`);
        expect(null).assertFail();
        done();
      }
    });

    /**
     * @tc.number SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0500
     * @tc.name check createTrustAnchorsWithKeyStore with pwd empty
     * @tc.desc Use Promise Type
     * @tc.size SmallTest
     * @tc.level Level1
     * @tc.type Function
     */
    it("SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0500", 0, async (done: Function) => {
      let caseName = "SUB_Security_Cert_Framework_CreateTrustAnchor_Func_0500";
      let pwd = '';
      try {
        cert.createTrustAnchorsWithKeyStore(pubKeyData, pwd)
          .then((data) => {
            expect(null).assertFail();
            done();
          })
          .catch((err: BusinessError) => {
            console.error(`${caseName} failed, err: ${JSON.stringify(err)}`);
            expect(null).assertFail();
            done();
          });
      } catch (error) {
        console.error(`${caseName} catch error: ${JSON.stringify(error)}`);
        expect(error.code == 401).assertTrue();
        done();
      }
    });
  });
}

let pubKeyData = new Uint8Array([
  0x30,0x82,0x0D,0x7F,0x02,0x01,0x03,0x30,0x82,0x0D,0x35,0x06,0x09,0x2A,0x86,0x48,
  0x86,0xF7,0x0D,0x01,0x07,0x01,0xA0,0x82,0x0D,0x26,0x04,0x82,0x0D,0x22,0x30,0x82,
  0x0D,0x1E,0x30,0x82,0x07,0x92,0x06,0x09,0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,
  0x06,0xA0,0x82,0x07,0x83,0x30,0x82,0x07,0x7F,0x02,0x01,0x00,0x30,0x82,0x07,0x78,
  0x06,0x09,0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x07,0x01,0x30,0x57,0x06,0x09,0x2A,
  0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0D,0x30,0x4A,0x30,0x29,0x06,0x09,0x2A,0x86,
  0x48,0x86,0xF7,0x0D,0x01,0x05,0x0C,0x30,0x1C,0x04,0x08,0xC7,0x13,0x6A,0xD7,0x24,
  0xFF,0xB3,0x3B,0x02,0x02,0x08,0x00,0x30,0x0C,0x06,0x08,0x2A,0x86,0x48,0x86,0xF7,
  0x0D,0x02,0x09,0x05,0x00,0x30,0x1D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,
  0x01,0x2A,0x04,0x10,0x71,0x32,0x04,0xA6,0x07,0x06,0xDD,0x74,0xCF,0xFE,0x1B,0x44,
  0x4E,0xB4,0x7F,0xBA,0x80,0x82,0x07,0x10,0x06,0x99,0xD6,0x78,0x61,0xDB,0xA8,0x34,
  0x7F,0x2E,0x6B,0xDF,0xE6,0xE2,0x20,0x98,0xCD,0xE3,0x61,0x73,0xE9,0x76,0xAB,0xE5,
  0x46,0xBB,0x80,0x76,0x6F,0x14,0x9B,0x90,0x1C,0x7B,0x0B,0xBA,0x01,0xAE,0x72,0x99,
  0x1A,0x31,0x7D,0xEF,0x54,0x3F,0x75,0x2B,0xE8,0x84,0xE0,0x3D,0xBD,0x7F,0xEF,0xCC,
  0xF1,0x33,0xCD,0x48,0x95,0x02,0xB6,0x18,0xA7,0x77,0xD0,0x00,0x95,0xA9,0x6A,0xDC,
  0x79,0xBE,0x5C,0xE1,0x76,0x76,0xD0,0x10,0x67,0x25,0x25,0x51,0x6A,0x75,0x09,0xEF,
  0x19,0x44,0x45,0x0C,0x14,0x10,0x81,0xC7,0x2E,0x11,0x97,0x10,0xA5,0x48,0x37,0xBD,
  0xAA,0x84,0x20,0x48,0x81,0x31,0x29,0x78,0x76,0x60,0x44,0x21,0x2A,0x01,0x46,0xA2,
  0x6D,0xEA,0x00,0xA7,0xBA,0x5D,0x89,0x69,0xDE,0xA1,0x24,0x88,0xEF,0x46,0x5B,0x06,
  0xFB,0xF9,0x8B,0xA7,0xA8,0x21,0x63,0xE3,0xA3,0x7C,0x33,0xB4,0x27,0xA3,0xB7,0x1C,
  0x75,0xD9,0xD7,0x3F,0xA0,0xE0,0x94,0xC6,0xE9,0x9D,0xD0,0x5A,0x05,0x61,0x1F,0x1B,
  0xF2,0xF2,0xA8,0xA1,0xA9,0x48,0xA6,0x4E,0xC0,0xE4,0x4E,0x6D,0x4F,0xB1,0xD8,0x58,
  0x86,0x9E,0x18,0x20,0x00,0x12,0xDA,0xBA,0xE1,0x53,0xFE,0x17,0xE3,0x59,0x09,0x96,
  0x3D,0xE9,0xDD,0x4C,0xFF,0xFB,0x7F,0x29,0x7C,0xBE,0xC8,0xF0,0xA4,0xBE,0x50,0x51,
  0x9D,0x21,0x58,0x17,0xFB,0x7B,0xA2,0x77,0x03,0xBC,0xBB,0x34,0x9F,0xD2,0x92,0xCF,
  0x66,0xD9,0x19,0x20,0x3E,0x89,0xFF,0x44,0xB8,0x26,0x80,0x94,0x33,0x5C,0x9F,0x8D,
  0x97,0x51,0x4E,0xC0,0x2B,0xB1,0x46,0xF3,0x64,0x98,0xFE,0x23,0x6A,0x6C,0x96,0xAD,
  0xD1,0xF4,0x28,0x13,0x47,0x55,0x66,0xEE,0xAE,0x17,0xC0,0xCE,0x98,0xC8,0xC8,0xDE,
  0x19,0x05,0xA3,0x02,0xD8,0x0F,0x72,0x2C,0x64,0xFA,0x19,0xFC,0x7F,0x3C,0xB5,0x7E,
  0x4F,0x01,0x3F,0x39,0x13,0xA7,0xCC,0x85,0x9B,0xA5,0x98,0x99,0x5E,0x02,0xBA,0xB1,
  0x95,0x29,0x83,0x97,0x57,0xC3,0x9A,0x43,0x9C,0xE6,0x6C,0xA7,0xD3,0xBC,0x84,0x69,
  0x6B,0xE4,0xDC,0x7D,0x68,0xFF,0x4D,0xFC,0x79,0xD1,0x3D,0x26,0x8C,0xBD,0x88,0xB3,
  0x9C,0xE4,0x2E,0x98,0x89,0x49,0x78,0xCE,0x76,0xD4,0x39,0x5D,0x78,0x1B,0x56,0x01,
  0x10,0x80,0xB8,0x2D,0x3D,0xC0,0xE4,0xEB,0x61,0x21,0x2B,0x3A,0xA5,0x07,0x45,0x0C,
  0x42,0x30,0x9A,0x87,0xAA,0x7D,0xE8,0x5A,0x3B,0xFF,0x44,0xB1,0xF7,0x22,0xB8,0x88,
  0xB2,0x73,0x08,0xD7,0x82,0x07,0x74,0x21,0xA4,0x75,0xE0,0x92,0x43,0x90,0x55,0x57,
  0x32,0x05,0x3B,0x26,0xBB,0x9D,0x6D,0xCB,0xD0,0x7D,0x6E,0xE9,0xCB,0x47,0xA0,0x32,
  0x9A,0x1E,0x9E,0x19,0xB3,0xD4,0x9D,0x71,0xF2,0x86,0x28,0x66,0xEC,0xE2,0xFD,0x61,
  0xD0,0x96,0x76,0xBB,0xE7,0xFE,0xA9,0x16,0x4F,0xAC,0xB6,0x56,0x4D,0xAF,0x7F,0xBB,
  0xF5,0x2D,0xE9,0x74,0x8A,0x29,0x75,0x27,0x99,0x5B,0x0C,0x88,0x93,0xAA,0x92,0xCD,
  0x4C,0x7A,0x9A,0x26,0x2B,0x0F,0x8D,0xFF,0x00,0x71,0xC9,0x91,0x31,0x34,0x62,0xB3,
  0x0D,0x93,0x0A,0xB1,0x22,0xB6,0x67,0x80,0xD7,0x20,0x20,0x66,0x88,0x23,0xC7,0x3C,
  0xB2,0xC7,0x0E,0x2B,0x7A,0xAB,0x33,0x42,0x60,0x95,0xB9,0x4F,0x61,0x3D,0x0E,0x7F,
  0xB7,0xFA,0xC3,0x91,0x24,0x31,0x80,0x18,0xA7,0xED,0x44,0x97,0x1B,0x8E,0xED,0x8C,
  0x03,0x4F,0x37,0xC4,0x3E,0x99,0x78,0xE4,0xA4,0xE2,0xBD,0x27,0x14,0x38,0x31,0xF2,
  0x8E,0xF4,0x7C,0xE3,0x80,0x80,0x2B,0x3C,0xF1,0x6B,0x9B,0xF8,0x06,0x6C,0x90,0x70,
  0x21,0x50,0x4D,0x2D,0x2F,0xC9,0x74,0x1A,0x74,0x08,0x9F,0xFD,0x2A,0x51,0x1F,0xDB,
  0x97,0x71,0xC9,0x37,0x88,0x85,0x8C,0x76,0xE1,0xBA,0xB8,0xE6,0x2B,0x47,0x84,0xD8,
  0x59,0x4D,0x7C,0x62,0xDF,0x00,0xC5,0x59,0xC4,0x1E,0x1C,0x43,0x36,0x22,0x29,0xBE,
  0xE2,0x37,0x26,0x50,0xBB,0x8D,0x47,0xF7,0xE0,0xD7,0xED,0x5B,0xC2,0x8C,0xA6,0xD9,
  0xD7,0xD8,0x6B,0xAB,0x44,0xD1,0x73,0xEA,0xFF,0x36,0x45,0xDA,0xC8,0x1E,0x17,0xD0,
  0x71,0x58,0x13,0x3B,0x53,0xE6,0x83,0x4C,0xED,0x8B,0xD4,0xA4,0x56,0x80,0x41,0xB5,
  0xEE,0xCB,0x7F,0x8B,0x49,0x90,0xA6,0xFE,0x06,0xDE,0xA7,0x6E,0x6D,0x15,0x93,0xBF,
  0x4C,0xE9,0xB8,0xEB,0xBE,0x66,0x3C,0xA5,0x09,0x2C,0x5E,0x31,0x7F,0xB0,0x3F,0x3C,
  0x4F,0xBB,0xDB,0x43,0x5F,0xEC,0xBF,0x61,0xE8,0x9F,0x42,0x96,0x1C,0x75,0x2D,0xAD,
  0xF4,0x6B,0xCF,0x6E,0xD2,0x9B,0x68,0xA6,0xE2,0xEA,0xDC,0x92,0x6D,0x0D,0xC5,0xE3,
  0x3C,0xA2,0xE4,0x95,0xD1,0x9F,0xC5,0x29,0x75,0x5C,0xDE,0x6E,0x88,0x9B,0x67,0x1C,
  0xDD,0xBF,0x9E,0x64,0xB3,0x6B,0x66,0x0A,0xA6,0x5E,0x97,0x89,0x46,0x3E,0x14,0xA0,
  0x1D,0xC7,0x4B,0xF6,0xCD,0xD8,0x45,0x89,0xB4,0xE9,0x80,0xF5,0x16,0x47,0x84,0xAD,
  0x45,0x9D,0xB8,0x64,0x62,0x51,0x7F,0xAD,0xCE,0x5A,0xB9,0x58,0x00,0x42,0x52,0xE2,
  0xCA,0xAE,0x0B,0x04,0xCB,0x40,0xDD,0x68,0x64,0x87,0x5B,0x23,0x79,0x55,0xB4,0x45,
  0x3E,0x6C,0x3B,0xBE,0x96,0x0C,0xC2,0xD5,0xED,0x5F,0xC6,0x81,0x7F,0x0C,0x2E,0x4A,
  0x58,0xD6,0x38,0x04,0x6A,0xF4,0xDF,0x79,0x51,0x1A,0x73,0x1F,0x85,0xED,0x2F,0x35,
  0x92,0x7E,0x08,0x44,0xEF,0xC2,0x4D,0xDC,0x5F,0xD3,0xC5,0xE0,0xE5,0x1B,0x35,0x0A,
  0x82,0x08,0x51,0xD7,0x7C,0xDC,0x34,0x72,0xF1,0x1C,0xF8,0x7A,0xBB,0xA8,0x5B,0xE9,
  0x28,0xA6,0x21,0x86,0x2C,0xC1,0x7A,0x99,0x3B,0x87,0x59,0x68,0x3D,0x43,0xAE,0x1E,
  0x76,0x1A,0x6A,0x45,0x5B,0x68,0xEB,0x17,0xCC,0x0B,0x3E,0xDC,0x5B,0xD3,0x90,0x0E,
  0x04,0x52,0xE2,0xEC,0x8C,0xBF,0xBE,0x4E,0xDA,0x6C,0x2B,0xA8,0x6A,0x7A,0x2F,0x73,
  0x08,0x2B,0x11,0x87,0xA7,0x78,0x5C,0x22,0x77,0x06,0x01,0x6A,0x1D,0x2E,0x2E,0xC7,
  0x00,0x86,0x21,0x54,0xDB,0x92,0xB9,0xAF,0x7C,0x90,0x36,0xAB,0x6F,0x13,0xCC,0x18,
  0x0A,0x3B,0xCB,0xEA,0x07,0x89,0x45,0x26,0xCA,0x9A,0x2A,0x0C,0xD5,0x0C,0x03,0xD7,
  0x10,0x51,0x62,0xE4,0x6C,0x9A,0x2F,0x77,0x40,0x20,0xD8,0xEE,0x07,0x96,0x0A,0x10,
  0x3F,0xAB,0xE1,0x55,0x6B,0xE8,0xBA,0x56,0xD2,0xA2,0xFA,0x68,0x42,0xF9,0x5C,0xCD,
  0x4B,0x5B,0x15,0x95,0xAF,0x8E,0x69,0x71,0xFD,0x3C,0x7C,0xCC,0x6A,0xA4,0x51,0xA6,
  0xC2,0xDC,0xD2,0x22,0x86,0x18,0x92,0x8A,0x83,0xF5,0x1E,0x0A,0x01,0x92,0xB8,0xD2,
  0x52,0x19,0x05,0x72,0xF4,0x62,0x46,0x19,0xD6,0xFB,0x2D,0x45,0x46,0xD9,0xC3,0x44,
  0xF8,0x7B,0xC6,0xA6,0xF0,0x3C,0x1C,0xAE,0x16,0xD5,0xE1,0xB1,0x92,0xB4,0x9D,0xB7,
  0x96,0x6F,0xBA,0x7E,0x7D,0x20,0xD2,0x1C,0x50,0x78,0x94,0xDF,0xC4,0x74,0x3F,0x5A,
  0xFA,0x9E,0xC4,0x48,0xDD,0x36,0xD1,0x4F,0xC3,0x50,0x4D,0x45,0x69,0x19,0x0C,0x54,
  0x7E,0x2D,0xD5,0x03,0xDC,0x04,0x00,0x3B,0x07,0x0B,0x03,0xB0,0x2C,0x51,0x85,0x1A,
  0x7D,0x3D,0x33,0xBA,0xCA,0x62,0x64,0x88,0x7A,0x2C,0x1A,0x06,0x7B,0xE9,0x2A,0xE7,
  0x30,0xE3,0x35,0x7C,0x9E,0xE7,0x9D,0x4D,0xE8,0x71,0x24,0x8A,0xCE,0xA9,0x9C,0xE7,
  0x0D,0x1D,0x6D,0x35,0xA2,0x8F,0xD2,0xEA,0x85,0x6A,0x3E,0x2B,0x9C,0x76,0x56,0x77,
  0x57,0x4F,0xED,0xED,0x5F,0xE9,0xE4,0x88,0xC2,0xBD,0x74,0xA7,0x8C,0x78,0xFF,0x60,
  0x25,0xFE,0xAC,0xD0,0x25,0x4A,0x04,0xEE,0xC5,0xA2,0xB7,0xC4,0x9D,0x3E,0xD6,0xD9,
  0xD0,0x31,0xA2,0x23,0x69,0x36,0x14,0xE6,0xAB,0xF8,0x23,0xC9,0x2E,0x84,0x02,0x4C,
  0x72,0x37,0x7A,0x58,0x64,0xD1,0x16,0xCD,0x74,0x93,0xE9,0x55,0xA7,0xCC,0x96,0xA3,
  0xE3,0xB4,0x5C,0x1D,0xBC,0x84,0x77,0x36,0x97,0xBD,0x93,0x62,0x88,0x2E,0xCA,0x5B,
  0xCB,0xD6,0x09,0x7F,0xB7,0xB1,0xD6,0x42,0x83,0x2B,0x7D,0xF1,0xA3,0xE8,0x66,0x93,
  0x84,0xB6,0x17,0x28,0x88,0x4D,0xEC,0x2C,0xA3,0x8C,0x9B,0x44,0xB1,0x12,0x4A,0x92,
  0xB3,0xD7,0xCD,0x3B,0xC3,0xB8,0xD2,0xE8,0x71,0x25,0x0D,0xD1,0x97,0xDD,0x9D,0xF7,
  0x7C,0x9C,0x28,0xFD,0x68,0x4B,0x36,0xC7,0x86,0x4E,0xE1,0x83,0xA1,0xBF,0xA1,0x39,
  0xA0,0x1F,0xC4,0x1D,0xDC,0x1D,0xCF,0xEB,0x6C,0x54,0x2A,0x47,0xB0,0x6F,0x93,0x8F,
  0xE8,0x3C,0x8D,0x2B,0x6F,0xE3,0xFA,0xFC,0x84,0x1A,0x51,0xBC,0x19,0x97,0xBA,0x3E,
  0xA7,0x9F,0xE3,0xA5,0xA7,0x02,0xA0,0xBB,0x02,0x09,0x5A,0xEE,0x7F,0xDC,0x60,0x7D,
  0xF1,0x79,0x42,0xE9,0x81,0x58,0x5D,0xFC,0x79,0x21,0x6A,0x19,0xD3,0xEA,0x60,0xCD,
  0x68,0xA6,0x62,0x8A,0x02,0xB8,0xBF,0x1A,0x42,0xCD,0x9F,0x1D,0x8E,0x48,0x1D,0x93,
  0xD9,0xDB,0x5E,0x1B,0x39,0xA2,0x47,0xA5,0xA5,0xC3,0xBC,0xCB,0xB1,0x10,0x15,0xE7,
  0x24,0x57,0x88,0x5E,0x52,0x0A,0xE8,0x68,0xE0,0x36,0x62,0x1C,0xA2,0x2D,0xDD,0x81,
  0x0E,0xA3,0xD7,0xAB,0x4F,0xCB,0x72,0xF9,0xB8,0x2A,0x6A,0x78,0x06,0xEE,0x74,0x76,
  0x09,0x2E,0x01,0x55,0xE0,0x18,0xD5,0x8C,0x06,0xCE,0xCA,0x05,0x2E,0x94,0x08,0xE1,
  0x48,0xA2,0xAF,0x9F,0xCA,0x1F,0xC8,0x05,0xFF,0xB1,0xB6,0xBC,0x01,0xA9,0xC6,0x14,
  0x18,0xC2,0xE3,0x0D,0x5C,0x63,0xE6,0xAF,0x7D,0x9C,0x10,0x0E,0xA1,0x58,0xA2,0x12,
  0xD3,0x27,0x48,0x2C,0xCF,0x2A,0x1A,0xB8,0x66,0x48,0xEF,0x87,0x03,0xDA,0x7F,0xCC,
  0xE2,0x95,0x14,0x5F,0x09,0xCB,0x89,0x99,0xF8,0xAD,0x3D,0x61,0xCC,0x05,0xBA,0xAC,
  0x52,0xA5,0x52,0xAF,0x41,0x84,0x57,0x8D,0x67,0x79,0xAF,0xF7,0x77,0x1B,0x2C,0xA1,
  0x7F,0x62,0x31,0x72,0xEB,0xED,0x76,0xFC,0xBF,0x74,0x97,0x0A,0x27,0x1E,0x93,0x82,
  0x7E,0x7C,0xC9,0x0D,0xE5,0x15,0x04,0xB6,0xD2,0x7C,0x90,0x2F,0x65,0x7A,0x3C,0x9B,
  0x18,0xAD,0xD6,0x3A,0x2D,0x82,0xA2,0xD5,0x05,0x6F,0xA5,0xBD,0x53,0x0E,0xE3,0x10,
  0x2E,0x8E,0xD1,0x0F,0xCB,0xA5,0x5D,0xBC,0x2C,0xFF,0x10,0xCE,0x35,0xB3,0x16,0x00,
  0x65,0x17,0x4E,0x8D,0x6F,0x0F,0x2C,0x00,0xF3,0xD0,0xE8,0x07,0x00,0x62,0xFA,0x2C,
  0x4F,0xCB,0xDD,0xD4,0xE1,0xA7,0xFB,0x84,0xD6,0xBF,0x7A,0xBA,0x3C,0x05,0x6E,0x11,
  0x64,0x78,0xBD,0xEE,0x09,0xBA,0x00,0x5E,0xFC,0x6A,0x72,0xEB,0x3D,0x03,0xED,0x23,
  0x4D,0xA2,0xB3,0xEE,0x95,0xE3,0x22,0xE6,0xE7,0x07,0x5C,0x1A,0x2E,0xD5,0x7B,0x98,
  0xC6,0x2A,0xA9,0xBB,0xBC,0x65,0xBD,0x67,0x32,0xA1,0x77,0x84,0x3E,0x90,0x89,0x30,
  0x9A,0xA1,0x0E,0xB0,0xFF,0xD5,0x4F,0x52,0x21,0x8B,0x2E,0xEE,0x46,0x8F,0xF5,0x41,
  0x09,0xBF,0xDA,0xE7,0x35,0xCF,0x1B,0x47,0xB1,0xAD,0x84,0x0D,0x13,0xF0,0xFA,0xAB,
  0xDB,0x6E,0xD0,0x60,0x76,0x45,0xD0,0xCD,0x5C,0xA8,0xB1,0x46,0xD1,0x71,0x28,0xD9,
  0xEA,0x3E,0xA1,0xD1,0xCB,0xC6,0xE3,0x44,0x42,0xB9,0xD3,0x54,0x1C,0xC9,0x24,0xCF,
  0xE5,0x99,0xD5,0x0B,0xCC,0x89,0x61,0x82,0x72,0x05,0x2B,0x31,0xFE,0xB1,0x75,0x20,
  0xCA,0xB9,0x39,0x1C,0x0D,0xCE,0xDD,0xBA,0xD9,0x54,0x99,0x5B,0xA1,0x96,0x0D,0xC6,
  0x49,0x5F,0x4F,0x62,0xF3,0x0B,0x11,0x5F,0x6A,0x56,0xB9,0xF2,0x31,0xA2,0x44,0xB1,
  0xE2,0x51,0xFE,0x3C,0x00,0xA5,0xF3,0x8B,0x6F,0xCA,0x2D,0x55,0xC1,0xAB,0x62,0x32,
  0x4F,0x2F,0x8D,0x2E,0x1C,0xEE,0xB3,0x06,0x30,0x82,0x05,0x84,0x06,0x09,0x2A,0x86,
  0x48,0x86,0xF7,0x0D,0x01,0x07,0x01,0xA0,0x82,0x05,0x75,0x04,0x82,0x05,0x71,0x30,
  0x82,0x05,0x6D,0x30,0x82,0x05,0x69,0x06,0x0B,0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,
  0x0C,0x0A,0x01,0x02,0xA0,0x82,0x05,0x31,0x30,0x82,0x05,0x2D,0x30,0x57,0x06,0x09,
  0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0D,0x30,0x4A,0x30,0x29,0x06,0x09,0x2A,
  0x86,0x48,0x86,0xF7,0x0D,0x01,0x05,0x0C,0x30,0x1C,0x04,0x08,0xCF,0xAD,0x81,0xB2,
  0x3A,0xC5,0xDF,0x14,0x02,0x02,0x08,0x00,0x30,0x0C,0x06,0x08,0x2A,0x86,0x48,0x86,
  0xF7,0x0D,0x02,0x09,0x05,0x00,0x30,0x1D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,
  0x04,0x01,0x2A,0x04,0x10,0x54,0xEA,0x73,0xEC,0x34,0x2C,0x74,0xAB,0xED,0x18,0xD8,
  0xB6,0x3A,0xE2,0x74,0xA2,0x04,0x82,0x04,0xD0,0x1A,0x43,0x54,0x2A,0x45,0xF5,0xB8,
  0x40,0x6B,0x0D,0x7F,0xA1,0x84,0x59,0x28,0x7C,0xB3,0x77,0x69,0x40,0x93,0x06,0xA8,
  0xF7,0xA4,0xB9,0x80,0xB3,0x7F,0x9C,0x18,0x80,0xD5,0x11,0xDF,0xDC,0xE9,0xBB,0x56,
  0x7F,0x6C,0xF7,0x0E,0xFD,0x88,0xDA,0xC1,0x3F,0x38,0xD2,0x22,0x71,0x23,0x7F,0x8D,
  0xAF,0x3A,0x8D,0xFC,0xCE,0x6C,0x8D,0x3D,0x92,0xB1,0x22,0x4A,0xCC,0x60,0x0B,0x8E,
  0xAB,0x4E,0x8E,0x00,0x1E,0xE3,0x06,0x72,0x86,0xA7,0xA0,0x15,0x45,0x01,0x9D,0xDF,
  0x51,0x33,0xB9,0x57,0xA2,0x3A,0xD5,0x0B,0xBC,0x38,0xF8,0xBB,0x84,0xEA,0xD9,0xD7,
  0x57,0x2C,0x7C,0xB5,0x04,0xD5,0x60,0xC4,0x4A,0xA2,0x57,0x0B,0x88,0xE1,0xB5,0xFB,
  0x5A,0x63,0x6F,0x30,0x9D,0x1B,0x40,0x61,0x05,0xB9,0xC9,0x41,0x9E,0xFB,0x08,0x61,
  0x75,0x5A,0xF1,0x2C,0x89,0xA3,0x0C,0x2A,0xBA,0x8E,0x6F,0x16,0xC9,0xB1,0x1B,0xEB,
  0xF8,0xE1,0x9D,0x17,0x01,0xBC,0xBF,0xF0,0x06,0xB0,0xF2,0xAC,0x8A,0x0B,0x34,0x88,
  0xC0,0xF0,0x7A,0x32,0xED,0x0A,0xBE,0x55,0xD8,0xE8,0x4C,0xBC,0x87,0x14,0xFC,0xD2,
  0xAD,0xDA,0x78,0x77,0x12,0xDD,0x27,0x29,0x38,0x99,0x4F,0x26,0xBE,0xAD,0x1D,0xAD,
  0xF3,0x5A,0x62,0x07,0xF9,0x51,0x66,0xA8,0xD0,0x90,0xD8,0x46,0x5C,0x39,0x40,0xFB,
  0x67,0x53,0xDF,0x9C,0x97,0x47,0xC6,0xC4,0xD8,0xBE,0x0D,0x09,0x48,0x0A,0x62,0x45,
  0x77,0x01,0x07,0xF9,0x26,0xFD,0x99,0x50,0x3E,0x69,0xA9,0x98,0x31,0x1A,0xAE,0x94,
  0xA7,0x2E,0xA6,0x35,0x24,0xC5,0x7C,0x61,0x49,0x98,0xBC,0x4B,0x4F,0x10,0x91,0x5D,
  0x16,0x0F,0xFF,0xE2,0x89,0xAE,0x37,0xCD,0x5E,0x77,0x37,0xE8,0x39,0x1F,0xB9,0xDB,
  0x54,0xF3,0x8A,0x64,0xEC,0x2B,0xAF,0xA5,0xEA,0x6C,0x98,0x7D,0x59,0xF7,0xCC,0x3E,
  0x82,0xF9,0xE1,0x06,0x03,0xF0,0xF9,0x81,0x31,0x97,0x77,0x74,0x62,0x02,0x07,0x76,
  0x09,0x29,0x55,0xB8,0xE3,0x5C,0xC4,0x75,0xFA,0x40,0x50,0x86,0x5C,0x09,0x64,0xE3,
  0x5E,0x37,0xB7,0x40,0x3C,0x27,0x8A,0xC6,0x49,0x39,0x0B,0x8E,0x08,0x06,0x03,0x27,
  0x8E,0x69,0x46,0xDB,0x40,0x6E,0xE1,0x84,0xB1,0xAC,0x22,0xD0,0x3E,0x53,0x48,0x2C,
  0xFD,0xAB,0x83,0x68,0x40,0x28,0xA3,0xB8,0xDB,0xF2,0xE1,0x15,0x3C,0x6C,0xB4,0xF0,
  0xFB,0x6D,0xC2,0xC1,0x16,0x33,0x64,0xEA,0xFE,0x5B,0x92,0x78,0xEE,0xFF,0x5B,0xB0,
  0x84,0xE6,0xAD,0x01,0xCC,0x67,0x6D,0x1B,0xD0,0xDC,0x6B,0x4C,0x07,0xF0,0xE1,0x0E,
  0x0E,0x2F,0x98,0x46,0x9F,0x57,0x22,0x04,0xE2,0xF3,0xD9,0x5B,0x2D,0x4E,0xE5,0x7D,
  0x67,0xC8,0x2F,0xF3,0x80,0xFF,0x08,0x7B,0x89,0x81,0x53,0x8C,0x34,0x8F,0xDA,0x9F,
  0x35,0xC8,0xD2,0xCC,0x4F,0x29,0x5E,0x76,0x10,0x0F,0x84,0x75,0x51,0xA5,0x00,0xB1,
  0x3A,0xC0,0xF9,0x92,0x36,0xD1,0xCE,0xA3,0x50,0x64,0xA1,0xC0,0x79,0xFD,0x3B,0x55,
  0x95,0xB4,0x27,0xD7,0x8A,0x17,0x3B,0x1F,0x99,0xBC,0xBA,0xAE,0xE6,0x68,0xA6,0x5B,
  0x24,0x13,0x90,0x3E,0x5A,0xE2,0x5F,0x44,0x80,0xE1,0x6D,0x0D,0x2F,0x5C,0xF5,0xF2,
  0x7F,0x10,0xF0,0x95,0xF8,0x8B,0xBB,0x73,0x72,0x22,0x75,0x3D,0x0F,0x74,0x64,0x8B,
  0xBC,0xD8,0x62,0x24,0xC1,0x30,0x00,0xE6,0xAB,0xB9,0x91,0x36,0xAF,0xA4,0x9D,0x96,
  0x8C,0xE5,0x52,0xB4,0x94,0xDA,0x21,0xFE,0x87,0x6C,0x66,0x73,0xC8,0x17,0x22,0x64,
  0x8D,0x7A,0xEB,0x41,0x22,0x71,0xEE,0xF7,0xD1,0x2B,0xA4,0x48,0xA5,0x0F,0xBE,0x71,
  0x1B,0x92,0x6C,0x04,0x1D,0x1B,0x5E,0xDA,0x87,0x81,0xE1,0xAE,0x62,0x18,0x7B,0x0C,
  0x5E,0x91,0x85,0x48,0x96,0xBC,0xA9,0xDB,0x77,0xDB,0x8E,0x06,0xD3,0xED,0x47,0x41,
  0x62,0x4C,0x56,0x86,0x67,0xDC,0x1E,0xEB,0xC0,0xCF,0x0D,0xD7,0x6D,0xE4,0x09,0xDA,
  0xB3,0x06,0x7E,0xD0,0x2B,0x1E,0x2C,0xB5,0x7C,0x90,0x34,0xF8,0x58,0x9F,0xE8,0x87,
  0xB2,0x5D,0xBD,0x7A,0x96,0xB6,0xA9,0x02,0x41,0xF3,0x26,0x91,0x88,0x0E,0x7D,0xAC,
  0xA1,0xF1,0x29,0xBF,0x1D,0xE1,0xE1,0x86,0x8D,0xCA,0x8F,0xA5,0x18,0x6F,0x5C,0xE7,
  0x9F,0xED,0xA4,0xA4,0xDB,0x40,0xC0,0x52,0x2D,0xCC,0x2E,0x4A,0xF5,0xF8,0xE8,0x83,
  0xE7,0x85,0x0B,0x28,0xCC,0xB3,0x59,0x26,0x33,0x4D,0x1C,0x26,0xAC,0xEB,0xB6,0x0B,
  0xF3,0x5B,0x0B,0x11,0x1E,0xBC,0xA2,0xB3,0xEB,0x8C,0xFD,0xEF,0x8E,0x86,0x41,0x24,
  0x3B,0x31,0xE6,0x4A,0xD2,0x1F,0x11,0x4C,0x1C,0x38,0x39,0x94,0x00,0x79,0x5A,0x59,
  0x4F,0x0A,0xBD,0xAA,0x22,0x34,0x43,0xE6,0xC0,0xC9,0xFB,0xA9,0x59,0x62,0x20,0x75,
  0x48,0xF7,0xF5,0xF2,0x7E,0x1F,0x3C,0xEB,0x4A,0x00,0x74,0xD2,0x07,0xC9,0x85,0x27,
  0xB6,0x1A,0x22,0x2E,0xCC,0x97,0x00,0x16,0xE2,0x7E,0x87,0x24,0x5E,0x6B,0x77,0x0E,
  0xF2,0x13,0x99,0x9F,0x66,0x84,0x7D,0xB0,0x20,0x4D,0x65,0xE2,0x2D,0xFE,0x7B,0x4C,
  0x64,0xA4,0x81,0xE9,0x02,0x14,0x97,0x8F,0x72,0x8A,0x3E,0xC2,0x4A,0x5B,0xB7,0x5F,
  0xC3,0xF3,0x28,0x3E,0xEC,0x41,0x5D,0xDA,0x88,0x06,0xE5,0x14,0xD3,0xCF,0xF9,0x14,
  0x91,0x15,0x8A,0x2F,0x99,0x29,0xC3,0xAB,0x14,0xF4,0xC3,0x5B,0xB7,0x37,0x1F,0xE1,
  0x75,0xE9,0x89,0x0B,0x8A,0x47,0x02,0x54,0xA0,0x37,0x39,0x6C,0x8E,0x4D,0x71,0xF6,
  0x49,0x5F,0xCE,0x85,0x5F,0x8A,0x0E,0x77,0x73,0x1E,0x65,0x2E,0x9E,0x1D,0x5C,0xB0,
  0x54,0xA8,0x59,0x3B,0xF4,0xAA,0xE0,0xD0,0xA9,0x91,0x46,0xC8,0x94,0x3B,0x3F,0x98,
  0x2D,0x11,0xAC,0xA1,0xC0,0x41,0xA4,0xEA,0x8C,0x43,0x71,0x49,0x03,0x2C,0xA8,0x3D,
  0x1A,0x9B,0xDB,0xE2,0x44,0x76,0x87,0xCC,0xBF,0xC0,0x50,0xB0,0x7B,0x68,0x91,0xA2,
  0x36,0xA1,0x19,0x54,0xA1,0xF5,0x89,0x1E,0x45,0x03,0xA5,0xA4,0xBC,0xB0,0x69,0xC6,
  0x14,0xA4,0x36,0x92,0xCB,0x64,0x84,0x07,0xDA,0x49,0x85,0x94,0x4C,0xC1,0x46,0x19,
  0x6E,0xB6,0xD1,0x1C,0xA4,0x20,0x5F,0xD7,0x9D,0xD0,0xF0,0x89,0x83,0xF1,0xAC,0x82,
  0x58,0x8C,0xE8,0xFE,0xD2,0x6A,0xA2,0x26,0xB8,0x17,0xEF,0x44,0xF1,0xF1,0x58,0x19,
  0x4A,0x4A,0x71,0x7A,0x1E,0x48,0xE4,0xAF,0xDB,0x55,0xB6,0xF7,0x19,0xE8,0xBB,0x10,
  0x55,0xB1,0x93,0xCC,0x9F,0x15,0xF5,0x59,0x96,0xD0,0x79,0x11,0xB6,0x15,0xC6,0x0B,
  0x0A,0x71,0xED,0x97,0x96,0xBF,0x24,0xED,0x75,0x71,0x4B,0xD3,0x06,0xAC,0x89,0xD5,
  0x04,0x1D,0x45,0x04,0x4D,0xDD,0x22,0x54,0x07,0x31,0xFB,0xCB,0x37,0xA5,0x14,0x61,
  0xC8,0xEB,0xA6,0x06,0xB5,0x7A,0x5F,0xD3,0xD2,0xAA,0x15,0xB7,0xA0,0xC3,0x1B,0x63,
  0x55,0xE6,0x32,0x85,0xC9,0x97,0x57,0x66,0x84,0xCF,0xBF,0x85,0xB5,0x05,0x49,0x10,
  0xB6,0xCB,0xD9,0x63,0xE4,0x40,0xBC,0xF5,0x0C,0x5C,0xC8,0x5E,0x05,0xDE,0xAB,0xBF,
  0xB4,0x30,0x2A,0xFF,0x98,0xF6,0x97,0x1D,0xFE,0x90,0x02,0x1E,0x82,0xCB,0xFD,0x44,
  0x3B,0xFE,0x2A,0x6D,0x80,0x23,0x05,0x79,0x56,0x29,0xDC,0x41,0xE2,0xC9,0x6B,0xDF,
  0x86,0xB6,0x47,0xAF,0x2F,0xC7,0x10,0xFF,0x0E,0xA4,0xAD,0xB2,0x3D,0xD4,0x6E,0x96,
  0x04,0x62,0x68,0x77,0x93,0xEF,0x14,0xA3,0x05,0x6D,0x7D,0x34,0x83,0x63,0x39,0xDA,
  0x64,0xFA,0x3E,0x2C,0x25,0xCC,0xCA,0x6D,0xC8,0xBF,0x5F,0xBF,0x45,0x48,0xF8,0x79,
  0x2F,0xD6,0xBB,0x26,0x43,0x32,0x63,0xF3,0x99,0x0A,0xC9,0xF6,0x4E,0x8B,0xEF,0xDA,
  0x22,0x29,0x52,0x6A,0xEC,0x16,0x49,0x27,0x53,0x32,0x4E,0x42,0x8B,0xC0,0x8A,0x96,
  0x39,0x91,0x88,0x7E,0x91,0xA3,0xA0,0x02,0x91,0xD8,0xB0,0x9A,0xF5,0x67,0xF2,0xA4,
  0x0B,0x38,0x8C,0x20,0x05,0x76,0xA0,0xD8,0x85,0x31,0x25,0x30,0x23,0x06,0x09,0x2A,
  0x86,0x48,0x86,0xF7,0x0D,0x01,0x09,0x15,0x31,0x16,0x04,0x14,0xC8,0xA2,0xF1,0x20,
  0x93,0x53,0x8B,0x07,0x4C,0x82,0x66,0x41,0x63,0xAA,0xF4,0xF2,0xB6,0x4F,0x88,0x33,
  0x30,0x41,0x30,0x31,0x30,0x0D,0x06,0x09,0x60,0x86,0x48,0x01,0x65,0x03,0x04,0x02,
  0x01,0x05,0x00,0x04,0x20,0xE0,0xD5,0x90,0x7C,0x4E,0xC4,0xD3,0x39,0x6D,0xFE,0x1B,
  0x28,0x03,0x86,0xA2,0xAF,0x8C,0xE3,0x2A,0x7A,0x32,0xD0,0xB5,0xE5,0xE1,0xE1,0xBA,
  0x22,0xE8,0xE2,0x4C,0x00,0x04,0x08,0x24,0x78,0x31,0x70,0x2D,0xCD,0xE7,0x4B,0x02,
  0x02,0x08,0x00
]);